{"version":3,"sources":["Common/Header/Header.js","Layout/Home.js","Component/Success/AddedSuccess.js","Context/TransactionContext.js","Layout/MyApp.js","Context/GlobalContext.js","Context/HeaderContext.js","Component/SendMoney/SendMoney.js","Component/TransferMoney/TransferMoney.js","Component/StandingOrder/StandingOrder.js","Component/SetUpStanding/SetUpStanding.js","Component/PrivateBankingPayment/PrivateBankingPayment.js","Component/MobileTopUp/MobileTopUp.js","Component/DirectDebit/DirectDebit.js","Component/FutureDatedPayment/FutureDatedPayment.js","Component/ManagePayee/ManagePayee.js","Layout/MyAppLayout.js","Common/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","history","useHistory","className","isBack","onClick","goBack","push","name","HomeComponent","Operations","AddedSuccess","useState","show","setShow","useContext","TransactionContext","transactiondispatch","transactionstate","Toast","onClose","console","log","type","payload","autohide","ToastHeader","ToastBody","React","createContext","initialState","id","status","payee_name","amount","due_date","success_message","Account","transactions","accountid","contacts","email","accounttype","Accounts","balance","linked_accounts","reducer","state","action","newTransationArr","Arr","ID","accountID","Acc","find","a","transaction","AccArr","TransactionProvider","useReducer","value","Provider","children","getAccounts","dispatch","axios","get","then","res","result","data","getAccount","setAccount","account","post","deleteAccount","delete","putAccount","put","getTransactions","setTransaction","useStyles","Consumer","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","text","padding","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","messages","primary","secondary","person","TransactionCheck","useRouteMatch","path","url","getAccountData","useParams","accountId","getTransactionData","Testing","length","map","t","exact","AddNewUser","user","component","SingleAccount","useEffect","putAccountData","values","Math","floor","random","setTransactionData","AccountId","formRef","createRef","Option","Select","labelCol","span","wrapperCol","ref","onFinish","Item","label","rules","required","message","placeholder","allowClear","offset","htmlType","current","resetFields","TransactionUserTable","Table","striped","bordered","hover","u","TransactionAccountTable","DeleteOutlined","replace","setStatus","setAccountData","Name","addAccount","onChange","MyAppBody","classes","NavBar","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","NavBody","Login","Chatting","Fragment","CssBaseline","Paper","square","gutterBottom","List","ListSubheader","ListItem","button","ListItemAvatar","Avatar","alt","src","ListItemText","username","password","isLoggedIn","setIsLoggedIn","CollectionCreateForm","visible","onCreate","onCancel","Form","useForm","form","okText","cancelText","onOk","validateFields","catch","info","layout","initialValues","modifier","ToastMsg","delay","CollectionsPage","setVisible","LoggedIn","LeftSider","RightSider","MyAppComponent","GlobalContext","Global","GlobalProvider","HeaderContext","count","HeaderProvider","SendMoney","SendBody","globalContext","setValue","event","e","target","i","TransferMoney","TransferBody","j","StandingOrderBody","to","StandingOrder","SetUpStandingBody","SetUpStanding","PrivateBankingPaymentBody","class","PrivateBankingPayment","MobileTopUpBody","MobileTopUp","DirectDebitBody","AccordionList","Accordion","Accord","body","getBodies","defaultActiveKey","Card","Toggle","as","eventKey","classList","contains","remove","add","chgStyle","Collapse","Body","DirectDebit","Body1","Body2","Body3","Body4","style","paddingRight","href","float","width","FutureDatedPaymentBody","borderless","getStyleStatus","FutureDatedPayment","ManagePayee","Layout","Content","Footer","Sider","SubMenu","Menu","MyAppLayout","collapsed","setCollapsed","setTheme","location","setLocation","pathname","minHeight","collapsible","onCollapse","checked","checkedChildren","unCheckedChildren","defaultSelectedKeys","mode","icon","DesktopOutlined","UserOutlined","TeamOutlined","FileOutlined","margin","HomeOutlined","includes","go","textAlign","App","Data","basename","process","rel","MyApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff364ba4.chunk.js","sourcesContent":["import './Header.css';\r\nimport React from 'react'\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    let history = useHistory();\r\n    // history.goBack()\r\n    // history.push(path);\r\n\r\n    return ( \r\n        <div>\r\n            <div className=\"Header\">\r\n            {\r\n                props.isBack ? <button className=\"GoBack\" onClick={() => history.goBack()}><i className='go-back-logo'></i></button> : null\r\n            }\r\n                <div className=\"HeaderName\" onClick={() => history.push(\"/myAppLayout\")}>{props.name}</div>\r\n                <button className=\"HeaderUser\" onClick={() => history.push(\"/myApp\")}><i className='header-user-logo'></i></button>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Header;","import './Home.css';\r\nimport React, { Component } from 'react'\r\n//import { ListGroup, Container } from 'react-bootstrap';\r\n//import Carousel from 'react-bootstrap/Carousel';\r\n//import SendMoney  from \"../Component/SendMoney\";\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\nimport Header from \"../Common/Header/Header\";\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction HomeComponent(props) {\r\n    return (\r\n        <div className=\"Payments\">\r\n            <Header name={\"Payments\"} isBack={false}/>\r\n            <Operations />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n \r\nexport default HomeComponent;\r\n\r\n\r\n\r\nfunction Operations() {\r\n\r\n    let history = useHistory();\r\n\r\n    return ( \r\n        \r\n        <div className=\"operations-outer\">\r\n            <div className=\"Operations\">\r\n                <ul className=\"Services\">\r\n                <li onClick={() => history.push(\"/sendMoney\")}><i className='send-money'></i>Send Money or pay a bill<i className=' next'></i>  </li>\r\n                <li onClick={() => history.push(\"/transferMoney\")}><i className='transfer-money'></i>Transfer between my accounts<i className=' next'></i></li>\r\n                <li onClick={() => history.push(\"/standingOrders\")}>Standing orders<i className='next'></i></li>\r\n                <li onClick={() => history.push(\"/managePayees\")}>Manage payees<i className='  next'></i></li>\r\n                <li onClick={() => history.push(\"/mobileTopup\")}>Mobile top up<i className=' next'></i></li>\r\n                <li onClick={() => history.push(\"/directDebits\")}>Direct debits<i className='  next'></i></li>\r\n                <li onClick={() => history.push(\"/futureDatedPayments\")}>Future dated payments<i className='  next'></i></li>\r\n                <li onClick={() => history.push(\"/privateBankingPayment\")}>Private banking payment<i className='  next'></i></li>\r\n                </ul> \r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\n\r\n/*\r\n\r\n<li><a href=\"/transferMoney\"><i className='fa fa-exchange fa-lg transfer-money'></i>Transfer between my accounts<i className='fa fa-angle-right next'></i></a></li>\r\n<li><a href=\"/standingOrders\">Standing orders<i className='fa fa-angle-right  next'></i></a></li>\r\n<li><a href=\"/managePayees\">Manage payees<i className='fa fa-angle-right  next'></i></a></li>\r\n<li><a href=\"/mobileTopup\">Mobile top up<i className='fa fa-angle-right next'></i></a></li>\r\n<li><a href=\"/directDebits\">Direct debits<i className='fa fa-angle-right  next'></i></a></li>\r\n<li><a href=\"/futureDatedPayments\">Future dated payments<i className='fa fa-angle-right  next'></i></a></li>\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass HomeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            //name:\"Payments\",//\"Transfer Between\", //\"Send Money\",\r\n            //isBack: false            \r\n         }\r\n         \r\n        //this.props.setName('Payments')\r\n    }\r\n    render() { \r\n        return ( \r\n\r\n            <div className=\"Payments\">\r\n                <Header name={this.props.name} isBack={this.props.isBack}/>\r\n                <Operations />\r\n\r\n            </div>\r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default HomeComponent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/","import React, { useState, useContext } from 'react'\r\n\r\nimport { TransactionContext } from \"../../Context/TransactionContext\"\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport ToastHeader from 'react-bootstrap/ToastHeader';\r\nimport ToastBody from 'react-bootstrap/ToastBody';\r\n\r\n\r\n\r\nfunction AddedSuccess (props) {\r\n\r\n    const [show, setShow] = useState(true); // ToastMsg\r\n    let { transactionstate, transactiondispatch } = useContext(TransactionContext);\r\n\r\nfunction doWork(){\r\n    console.log(\"click\")\r\n    setShow(false);\r\n    transactiondispatch({type:\"show-success-toast\", payload: null})\r\n}\r\n\r\n    return(\r\n        <div>\r\n            <Toast onClose={ doWork } show={show} autohide>\r\n                <ToastHeader>\r\n                <strong className=\"mr-auto\">Success</strong>\r\n                <small>few mins ago</small>\r\n                </ToastHeader>\r\n                <ToastBody>Account added Success</ToastBody>\r\n            </Toast>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default AddedSuccess;\r\n","import React from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport AddedSuccess from \"../Component/Success/AddedSuccess\";\r\n\r\nconst TransactionContext = React.createContext();\r\n\r\nlet initialState = {\r\n    id: \"99\",\r\n    status: \"NONE\",\r\n    payee_name: \"NONE\",\r\n    amount: 0.00,\r\n    due_date: \"10/10/1970\",\r\n    type: \"NONE\",\r\n    success_message: null,\r\n    Account: null,\r\n    transactions : [\r\n        {\r\n            id: \"0\",            \r\n            accountid: null,\r\n            status: \"PENDING\",\r\n            payee_name: \"abcd\",\r\n            amount: 1000.00,\r\n            due_date: \"10/10/2020\",\r\n            type: \"DEBITED\",\r\n        }\r\n    ],\r\n    contacts: [\r\n        {\r\n          id: \"098\",\r\n          name: \"Diana Prince\",\r\n          email: \"diana@us.army.mil\",\r\n          accounttype: \"CURRENT\"\r\n        },\r\n        {\r\n          id: \"099\",\r\n          name: \"Bruce Wayne\",\r\n          email: \"bruce@batmail.com\",\r\n          accounttype: \"CURRENT\"\r\n        },\r\n        {\r\n          id: \"100\",\r\n          name: \"Clark Kent\",\r\n          email: \"clark@metropolitan.com\",\r\n          accounttype: \"CURRENT\"\r\n        }\r\n      ],\r\n      Accounts: [\r\n        {\r\n            id: \"1\",\r\n            name: \"1111\",\r\n            balance: 10000,\r\n            type: \"CURRENT\",\r\n            linked_accounts: [\r\n                \"1234\",\r\n                \"1478\",\r\n                \"1598\"\r\n            ],\r\n            transactions: [\r\n                {\r\n                    id: \"0\",\r\n                    status: \"PENDING\",\r\n                    payee_name: \"abcd\",\r\n                    amount: 1000.00,\r\n                    due_date: \"10/10/2020\",\r\n                    type: \"DEBITED\"\r\n\r\n                },\r\n                {\r\n                    id: \"0\",\r\n                    status: \"PENDING\",\r\n                    payee_name: \"abcd\",\r\n                    amount: 1000.00,\r\n                    due_date: \"10/10/2020\",\r\n                    type: \"DEBITED\"\r\n\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nlet reducer = (state, action) => {\r\n\r\n    switch(action.type) {\r\n        case \"reset\":\r\n            return initialState;\r\n        case \"set-status\":\r\n            return { ...state, status: action.payload };\r\n        case \"set-payee_name\":\r\n            return { ...state, payee_name: action.payload };\r\n        case \"set-amount\":\r\n            return { ...state, amount: action.payload };\r\n        case \"set-due_date\":\r\n            return { ...state, due_date: action.payload };\r\n        case \"set-type\":\r\n            return { ...state, type: action.payload }; \r\n        case \"add-transaction\":\r\n            const newTransationArr = [...state.transactions];     // const newArr = [...state.transactions, action.payload];\r\n            newTransationArr.push(action.payload);\r\n            return { ...state, transactions: newTransationArr};      \r\n        \r\n        case \"ADD_CONTACT\":\r\n            return {\r\n                contacts: [...state.contacts, action.payload]\r\n            };    \r\n\r\n        case \"add-account-transaction\":\r\n            const Arr = [...state.Accounts];\r\n            const ID = action.payload.accountID; // passing ID from MyApp.js\r\n            const Acc = Arr.find(a => a.id == ID);\r\n            if (Acc != null){\r\n                Acc.transactions.push(action.payload.transaction) // passing transaction from MyApp.js\r\n            }\r\n            //console.log(action.payload.transaction);\r\n            //console.log(Acc);\r\n            return {\r\n                ...state, Accounts: Arr\r\n            };\r\n            \r\n        case \"add-account\":\r\n            const AccArr = [...state.Accounts];\r\n            AccArr.push(action.payload);\r\n\r\n            return {\r\n                ...state, Accounts: AccArr\r\n            }\r\n\r\n        case \"FETCH-ACCOUNTS\":\r\n            return {\r\n                ...state, Accounts: action.payload\r\n            }\r\n\r\n        // case \"FETCH-ACCOUNT-ByID\":\r\n        //     return {\r\n        //         ...state, Accounts: action.payload\r\n        //     }    \r\n\r\n        case \"FETCH-TRANSACTIONS\":\r\n            return {\r\n                ...state, transactions: action.payload\r\n            }\r\n\r\n        case \"show-success-toast\":\r\n            return { ...state, success_message: action.payload };    \r\n    }\r\n};\r\n\r\nfunction TransactionProvider(props) {\r\n    \r\n    let [transactionstate, transactiondispatch] = React.useReducer( reducer, initialState );\r\n    let value = { transactionstate, transactiondispatch };\r\n\r\n    return (\r\n        <TransactionContext.Provider value= {value}> { props.children } </TransactionContext.Provider>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const getAccounts = async dispatch => {\r\n        // get user info handler (HOW TO USE)\r\n        // const getUserInfoHandler = async () => {\r\n        //     await getUser(userDispatch);\r\n        //     setLoading(userDispatch, false);\r\n        // };\r\n    await axios\r\n            .get(`https://my-banking-json-server.herokuapp.com/Accounts`) \r\n            .then(res => {\r\n                const result = res.data;\r\n                console.log(result);\r\n                dispatch({\r\n                    type: \"FETCH-ACCOUNTS\",\r\n                    payload: result   \r\n                })\r\n            })\r\n\r\n}\r\n\r\nexport const getAccount = async ( dispatch, id ) => {\r\n    return await axios\r\n            .get(`https://my-banking-json-server.herokuapp.com/Accounts/`+id)\r\n            .then( res => res.data )\r\n}\r\n\r\nexport const setAccount = async ( dispatch, account ) => {\r\n    await axios\r\n            .post(`https://my-banking-json-server.herokuapp.com/Accounts`, account)\r\n            .then(res => {\r\n                console.log(res);\r\n                // getting error for this dispatch only contacts coming, not Accounts, not setting all values correctly\r\n                // dispatch({\r\n                //     type: \"add-account\",\r\n                //     payload: res.data\r\n                // })\r\n                dispatch({\r\n                    type: \"show-success-toast\",\r\n                    payload: res.status\r\n                })\r\n                //return res.status;\r\n            })\r\n}\r\n\r\nexport const deleteAccount = async (dispatch, id ) => {\r\n    await axios\r\n            .delete(`https://my-banking-json-server.herokuapp.com/Accounts/`+ id )\r\n            .then(res => {\r\n                console.log(res);\r\n                getAccounts(dispatch);\r\n            })\r\n}\r\n\r\nexport const putAccount = async ( dispatch, account ) => {\r\n    await axios\r\n            .put(`https://my-banking-json-server.herokuapp.com/Accounts/`+account.id, account)\r\n            .then(res => {\r\n                console.log(res);\r\n                getAccounts(dispatch);\r\n            })\r\n}\r\n\r\n\r\n\r\nexport const getTransactions = async dispatch => {\r\n    await axios\r\n            .get(`https://my-banking-json-server.herokuapp.com/Transactions`) \r\n            .then(res => {\r\n                const result = res.data;\r\n                console.log(result);\r\n                dispatch({\r\n                    type: \"FETCH-TRANSACTIONS\",\r\n                    payload: result   \r\n                })\r\n            })\r\n\r\n}\r\n\r\nexport const setTransaction = async ( dispatch, transaction ) => { // /Transactions with -> new accountId field\r\n    await axios\r\n            .post(`https://my-banking-json-server.herokuapp.com/Transactions`, transaction)\r\n            .then(res => {\r\n                console.log(res);\r\n            })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet TransactionConsumer = TransactionContext.Consumer;\r\n\r\n\r\nexport { TransactionProvider, TransactionConsumer, TransactionContext }","import React, { useContext, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useState } from 'react';\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport ToastHeader from 'react-bootstrap/ToastHeader';\r\nimport ToastBody from 'react-bootstrap/ToastBody';\r\n\r\nimport Table from 'react-bootstrap/Table'\r\n// import Form from 'react-bootstrap/Form'\r\n\r\n//Adding antd modules and style\r\nimport { Button as Button1, Modal, Form, Input, Radio, Dropdown, Menu, Select, Checkbox  } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport { DownOutlined, UserOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nimport { TransactionContext, getAccounts, setAccount, deleteAccount, putAccount, getAccount, getTransactions, setTransaction } from \"../Context/TransactionContext\";\r\n\r\nimport { BrowserRouter, Route, Switch, useRouteMatch, useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\nimport AddedSuccess from \"../Component/Success/AddedSuccess\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    text: {\r\n      padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n      paddingBottom: 50,\r\n    },\r\n    list: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    subheader: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }));\r\n\r\n  const messages = [\r\n    {\r\n      id: 1,\r\n      primary: 'Brunch this week?',\r\n      secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\r\n      person: '/static/images/avatar/5.jpg',\r\n    },\r\n    {\r\n      id: 2,\r\n      primary: 'Birthday Gift',\r\n      secondary: `Do you have a suggestion for a good present for John on his work\r\n        anniversary. I am really confused & would love your thoughts on it.`,\r\n      person: '/static/images/avatar/1.jpg',\r\n    },\r\n    {\r\n      id: 3,\r\n      primary: 'Recipe to try',\r\n      secondary: 'I am try out this new BBQ recipe, I think this might be amazing',\r\n      person: '/static/images/avatar/2.jpg',\r\n    },\r\n    {\r\n      id: 4,\r\n      primary: 'Yes!',\r\n      secondary: 'I have the tickets to the ReactConf for this year.',\r\n      person: '/static/images/avatar/3.jpg',\r\n    },\r\n    {\r\n      id: 5,\r\n      primary: \"Doctor's Appointment\",\r\n      secondary: 'My appointment for the doctor was rescheduled for next Saturday.',\r\n      person: '/static/images/avatar/4.jpg',\r\n    },\r\n    {\r\n      id: 6,\r\n      primary: 'Discussion',\r\n      secondary: `Menus that are generated by the bottom app bar (such as a bottom\r\n        navigation drawer or overflow menu) open as bottom sheets at a higher elevation\r\n        than the bar.`,\r\n      person: '/static/images/avatar/5.jpg',\r\n    },\r\n    {\r\n      id: 7,\r\n      primary: 'Summer BBQ',\r\n      secondary: `Who wants to have a cookout this weekend? I just got some furniture\r\n        for my backyard and would love to fire up the grill.`,\r\n      person: '/static/images/avatar/1.jpg',\r\n    },\r\n  ];\r\n\r\n\r\n\r\n// TODO: jsPanel\r\nfunction MyAppComponent(props) {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* text-center */}\r\n            <div className=\"container-fluid \"> \r\n                <div className=\"row\">\r\n                    \r\n                    <div className=\"col-md-2\">\r\n                        <LeftSider />\r\n\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n\r\n                        <MyAppBody />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-md-2\">\r\n                        <RightSider />\r\n\r\n                    </div>\r\n\r\n                    {/* \r\n                    <TransactionCheck /> here\r\n\r\n                    */}\r\n\r\n                    \r\n\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction TransactionCheck(props) {\r\n\r\n\r\n  let { transactionstate, transactiondispatch } = useContext(TransactionContext);\r\n  const history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  const { accountId } = useParams();\r\n\r\n  const getAccountData = async ()=> {\r\n    await getAccounts(transactiondispatch);\r\n  }\r\n\r\n  const getTransactionData = async () => {\r\n    await getTransactions(transactiondispatch)\r\n  }\r\n\r\n\r\n  let status = () => \r\n      transactiondispatch({ \r\n        type: \"ADD_CONTACT\",\r\n        payload: { id: Math.floor(Math.random() * 100), name: \"newName\", email: \"newEmail\" } \r\n      });\r\n\r\n\r\n\r\n  const Testing = () => {\r\n\r\n    let addTransaction = () => transactiondispatch({\r\n      type: \"add-transaction\",\r\n      payload: { id:\"0\", status:\"PENDING\", payee_name:\"abcd\", amount:1000.00, due_date:\"10/10/2020\", type:\"DEBITED\" }\r\n    });  \r\n    \r\n    let addAccTransaction = () => transactiondispatch({\r\n      type: \"add-account-transaction\",\r\n      payload: {\r\n        accountID: \"1\",\r\n        transaction: { id:\"0\", status:\"PENDING\", payee_name:\"abcd\", amount:1000.00, due_date:\"10/10/2020\", type:\"DEBITED\" }\r\n      }\r\n    })\r\n\r\n\r\n    return(\r\n      <div>\r\n        <button onClick={getAccountData}>Call axios getAccountData</button>\r\n        <button onClick={getTransactionData}>Call axios getTransactionData</button>\r\n        <button onClick={addTransaction}>Add New Dummy Transactions</button>\r\n        <button onClick={addAccTransaction}>Add New Dummy Acc Transactions</button>\r\n\r\n\r\n        <p>Accounts.length: { transactionstate.Accounts != null ? transactionstate.Accounts.length : 0 }</p>\r\n        <p>Tranctions.length: { transactionstate.Accounts.map(t=>t.transactions != null ? t.transactions.length : 0 )}</p>\r\n          \r\n        <p><h5>transactionstate.transactions</h5>\r\n          {transactionstate.transactions.map(t=>\r\n          <div>\r\n            amount is <b>{t.amount}</b> accountid is <b>{t.accountid}</b> payee_name is <b>{t.payee_name}</b> {/* status is {t.status} due_date is {t.due_date} type is {t.type}*/}\r\n          </div>         \r\n          )}\r\n        </p>\r\n          <div>\r\n            <h5>transactionstate.transactions.length:</h5> {transactionstate.transactions.length}\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n\r\n  <div>\r\n      <button onClick={()=>{history.push(`${url}/testing`)}}>Testing</button>\r\n      \r\n      <button onClick={()=>{history.push(`${url}/addNewAccount`)}}>Add New Account</button>\r\n      <button onClick={()=>{history.push(`${url}/userTable`)}}>User Table</button>\r\n      <button onClick={()=>{history.push(`${url}/accountTable`)}}>Account Table</button>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path={path}>\r\n          </Route>\r\n          <Route path={`${path}/testing`}>\r\n            <div>\r\n              <Testing />      \r\n            </div>\r\n          </Route>\r\n          <Route path={`${path}/addNewAccount`}>\r\n            <div>\r\n              <AddNewUser />      \r\n            </div>\r\n          </Route>\r\n          <Route path={`${path}/userTable`}>\r\n            <TransactionUserTable user={transactionstate.contacts}/>\r\n          </Route>\r\n          <Route path={`${path}/accountTable`}>\r\n            <TransactionAccountTable user={transactionstate.Accounts}/>\r\n          </Route>\r\n          <Route path={`${path}/account/:accountId`} component={SingleAccount} />\r\n        </Switch>\r\n      </div>\r\n\r\n        {/* \r\n        \r\n          <p>contacts length is: {state.contacts.length}</p>   \r\n          <h3>\r\n            contacts name is {state.contacts.map(c=>c.name)}\r\n          </h3>  \r\n        \r\n        */}\r\n      \r\n      \r\n  </div> \r\n\r\n  )\r\n}\r\n\r\nfunction SingleAccount(props) {\r\n\r\n  const { accountId } =  useParams(); // got the clicked single Account id -> used in json call or data\r\n  let { transactionstate, transactiondispatch } = useContext(TransactionContext);\r\n  \r\n  const [account, setAccount] = useState(null);\r\n  const amount = 1000;\r\n\r\n  useEffect(\r\n    async ()=> {\r\n      setAccount(await getAccount(transactiondispatch, accountId))\r\n      console.log(account)\r\n    },\r\n    [] // to get call only once\r\n  ) // fetch values from heroku, current context has only 1 Account value in initialState\r\n\r\n\r\n  // 1st get value for current account thro useEffect -> collect old transaction in temp array -> .push new transaction -> PUT and update whole Account json data\r\n  const putAccountData = async (values)=> {\r\n    \r\n    const newTransationArr = account.transactions; // useEffect hook helps to fetch values for current selected accountId\r\n    \r\n    newTransationArr.push({\r\n      id: Math.floor(Math.random() * 100), status: \"SUCCESS\", payee_name: values.name, amount: values.amount, type: values.type \r\n    });\r\n\r\n    await putAccount(transactiondispatch,\r\n      {\r\n        id: account.id, name: account.name,  balance: account.balance + values.amount, type: account.type, linked_accounts: [], \r\n        transactions: newTransationArr\r\n      }\r\n    );\r\n  }\r\n\r\n  const setTransactionData = async (values) => {\r\n    await setTransaction(transactiondispatch,\r\n        {\r\n          id: Math.floor(Math.random() * 100), AccountId: accountId, status: \"SUCCESS\", payee_name: values.name, amount: values.amount, type: values.type \r\n        }\r\n      )\r\n  }\r\n\r\n  const formRef = React.createRef();\r\n\r\n  const { Option } = Select;\r\n\r\n  var onFinish = values => {\r\n    putAccountData(values);       // put json inside account's transaction -> you need update transaction part only\r\n    setTransactionData(values);   // post transaction json -> every tranasction post inside it (array)\r\n  };\r\n\r\n  var onReset = () => {\r\n    formRef.current.resetFields();\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8\r\n    },\r\n    wrapperCol: {\r\n      span: 16\r\n    }\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16\r\n    }\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      Account {accountId} {console.log(account)}\r\n      { account != null ? <div>id: {account.id} name: {account.name}</div> : null }\r\n      {/* { account != null ? <button onClick={putAccountData} > Credit {amount}</button> : null } */}\r\n      { account != null ? \r\n      <div>\r\n        <Form {...layout}\r\n          ref={formRef}\r\n          name=\"control-ref\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your Name!'\r\n              }\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"type\" label=\"Transaction Type\" rules={[{ required: true,},]} >\r\n            <Select\r\n              placeholder=\"Select Your Transaction Type\"\r\n              //onChange={onAccountTypeChange}\r\n              allowClear\r\n            >\r\n              <Option value=\"CREDITED\">CREDITED</Option>\r\n              <Option value=\"DEBITED\">DEBITED</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name=\"amount\" label=\"Amount\" rules={[{ required: true,},]} >\r\n            <Select\r\n              placeholder=\"Select Your Amount\"\r\n              //onChange={onAccountTypeChange}\r\n              allowClear\r\n            >\r\n              <Option value={100}> 100 </Option>\r\n              <Option value={500}> 500 </Option>\r\n              <Option value={2000}> 2000 </Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button1 type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button1>\r\n            <Button1 htmlType=\"button\" onClick={onReset}>\r\n              Reset\r\n            </Button1>\r\n\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    : null }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst TransactionUserTable = (props) => {\r\n\r\n\r\n  return(\r\n    <Table striped bordered hover>\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Email</th>\r\n        <th>Account Type</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {\r\n        props.user.map(u =>\r\n          <tr key={Math.random()}>\r\n            <td>{u.id}</td>\r\n            <td>{u.name}</td>\r\n            <td>{u.email}</td>\r\n            <td>{u.accounttype}</td>\r\n          </tr>\r\n      )\r\n      }\r\n    </tbody>\r\n  </Table>\r\n  )\r\n}\r\nconst TransactionAccountTable = (props) => {\r\n\r\n  let { transactionstate, transactiondispatch } = useContext(TransactionContext);\r\n  \r\n  const history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  const { accountId } = useParams();\r\n\r\n\r\n  // fetch values from heroku, current context has only 1 Account value in initialState\r\n  useEffect(\r\n    async ()=> {\r\n      await getAccounts(transactiondispatch);\r\n    },\r\n    [] // to get call only once\r\n  ) // fetch values from heroku, current context has only 1 Account value in initialState\r\n\r\n\r\n  return(\r\n    <Table striped bordered hover>\r\n    <thead>\r\n      <tr>\r\n        <th>#</th>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Balance</th>\r\n        <th>Account Type</th>\r\n        <th>Transactions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {\r\n        transactionstate.Accounts.map(u =>\r\n          <tr key={Math.random()}>\r\n            <td onClick={()=>{deleteAccount(transactiondispatch, u.id)}} ><DeleteOutlined />Delete</td>\r\n            <td onClick={()=>{history.push(`${url.replace('accountTable','account')}/`+u.id)}}>{u.id}</td>\r\n\r\n            <td>{u.name}</td>\r\n            <td>{u.balance}</td>\r\n            <td>{u.type}</td>\r\n            <td>\r\n              <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>Status</th>\r\n                  <th>Amount</th>\r\n                  <th>Due date</th>\r\n                  <th>Type</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                u.transactions != null ?\r\n\r\n                  u.transactions.map(t => \r\n                    <tr>\r\n                      <td>{t.status}</td>\r\n                      <td>{t.amount}</td>\r\n                      <td>{t.due_date}</td>\r\n                      <td>{t.type}</td>\r\n                    </tr>\r\n                    )\r\n                    : \r\n                    null\r\n                }\r\n                </tbody>\r\n                </Table>\r\n            </td>\r\n          </tr>\r\n      )\r\n      }\r\n    </tbody>\r\n  </Table>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction AddNewUser (props) {\r\n\r\n  let { transactionstate, transactiondispatch } = useContext(TransactionContext);\r\n\r\n  const [status, setStatus] = useState(null);\r\n  \r\n\r\n  const setAccountData = async (values) => {\r\n    await setAccount(transactiondispatch, {\r\n      id: Math.floor(Math.random() * 100), name: values.Name,  balance: 0, type: values.accounttype, linked_accounts: [], transactions: []\r\n    }); // sent json (Account obj) built from values \r\n  }\r\n\r\n  const formRef = React.createRef();\r\n\r\n\r\n  const { Option } = Select;\r\n\r\n\r\n  let addContact = (values) => transactiondispatch({ \r\n      type: \"ADD_CONTACT\",\r\n      payload: { id: Math.floor(Math.random() * 100), name: values.Name, email: values.Email, accounttype: values.accounttype } \r\n    });\r\n\r\n    let addAccount = (values) => transactiondispatch({\r\n      type: \"add-account\", \r\n      payload: {  id: Math.floor(Math.random() * 100),  name: values.Name,  balance: 0, type: values.accounttype, linked_accounts: [], transactions: [] }\r\n    })\r\n\r\n  var onFinish = values => {\r\n    // console.log(values);\r\n    // addContact(values)\r\n    addAccount(values);\r\n    setAccountData(values);\r\n  };\r\n  var onReset = () => {\r\n    formRef.current.resetFields();\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8\r\n    },\r\n    wrapperCol: {\r\n      span: 16\r\n    }\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16\r\n    }\r\n  };\r\n  const onAccountTypeChange = (value) => {\r\n    //console.log(\"Account type selected is \"+ value);\r\n  }\r\n\r\n  return(\r\n      <div>\r\n        <Form {...layout}\r\n        ref={formRef}\r\n        name=\"control-ref\"\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"Name\"\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Name!'\r\n            }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"Email\"\r\n          label=\"Email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Email!',\r\n            }\r\n          ]}\r\n        >\r\n        \r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"accounttype\" label=\"Account Type\" rules={[{ required: true,},]}\r\n        >\r\n          <Select\r\n            placeholder=\"Select Your Account Type\"\r\n            onChange={onAccountTypeChange}\r\n            allowClear\r\n          >\r\n            <Option value=\"CURRENT\">CURRENT</Option>\r\n            <Option value=\"SAVING\">SAVING</Option>\r\n            <Option value=\"SALARY\">SALARY</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button1 type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button1>\r\n          <Button1 htmlType=\"button\" onClick={onReset}>\r\n            Reset\r\n          </Button1>\r\n\r\n        </Form.Item>\r\n      </Form>\r\n      <h1>{transactionstate.success_message != null ? <AddedSuccess setStatus={setStatus} /> : null} </h1>\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nfunction MyAppBody (props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <NavBar />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-1\"></div>\r\n                <div className=\"col-md-10\">\r\n                    {/* <Chatting /> Adding chat only after login sucess  */} \r\n                    {/* <Login /> */}\r\n                    <NavBody />\r\n                </div>\r\n                <div className=\"col-md-1\"></div>\r\n            </div>\r\n            \r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    let { path, url } = useRouteMatch();\r\n\r\n    return(\r\n        <div>\r\n          <AppBar position=\"static\">\r\n              <Toolbar>\r\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                  <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                  News\r\n              </Typography>\r\n              <Button color=\"inherit\" onClick={()=>{history.push(`${url}/myAccount`)}}>My Account</Button>\r\n              <Button color=\"inherit\" onClick={()=>{history.push(`${url}/login`)}}>Login</Button>\r\n              <Button color=\"inherit\">Sign Up</Button>\r\n              </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst NavBody = () => {\r\n\r\n  const history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n\r\n  return(\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n        </Route>\r\n        <Route path={`${path}/myAccount`}>\r\n          <div>\r\n          <TransactionCheck />\r\n          </div>\r\n        </Route>\r\n        <Route path={`${path}/login`}>\r\n          <Login />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst Chatting = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Paper square className={classes.paper}>\r\n                <Typography className={classes.text} variant=\"h5\" gutterBottom>\r\n                Inbox\r\n                </Typography>\r\n                <List className={classes.list}>\r\n                {messages.map(({ id, primary, secondary, person }) => (\r\n                    <React.Fragment key={id}>\r\n                    {id === 1 && <ListSubheader className={classes.subheader}>Today</ListSubheader>}\r\n                    {id === 3 && <ListSubheader className={classes.subheader}>Yesterday</ListSubheader>}\r\n                    <ListItem button>\r\n                        <ListItemAvatar>\r\n                        <Avatar alt=\"Profile Picture\" src={person} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={primary} secondary={secondary} />\r\n                    </ListItem>\r\n                    </React.Fragment>\r\n                ))}\r\n                </List>\r\n            </Paper>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    const [username, setUsername] = useState(\"a\"); // Matching username\r\n    const [password, setPassword] = useState(\"a\"); // Matching pwd\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // Login or Sucess Message\r\n\r\n    const [show, setShow] = useState(false); // ToastMsg\r\n\r\n    const CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\r\n        const [form] = Form.useForm();\r\n        return (\r\n          <Modal\r\n            visible={visible}\r\n            title=\"Login\"\r\n            okText=\"Login\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={onCancel}\r\n            onOk={() => {\r\n              form\r\n                .validateFields()\r\n                .then((values) => {\r\n                  form.resetFields();\r\n                  onCreate(values);\r\n                })\r\n                .catch((info) => {\r\n                  console.log('Validate Failed:', info);\r\n                });\r\n            }}\r\n          >\r\n            <Form\r\n              form={form}\r\n              layout=\"vertical\"\r\n              name=\"form_in_modal\"\r\n              initialValues={{\r\n                modifier: 'public',\r\n              }}\r\n            >\r\n              <Form.Item\r\n                name=\"username\"\r\n                label=\"User Name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please enter username!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"password\" label=\"Password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter password!',\r\n                },\r\n              ]}\r\n              >\r\n                <Input type=\"password\" />\r\n              </Form.Item>\r\n              \r\n            </Form>\r\n          </Modal>\r\n        );\r\n      };\r\n\r\n\r\n    const ToastMsg = () => {\r\n\r\n\r\n        return(\r\n            <Toast onClose={() => setShow(false)} show={show} delay={2000} autohide>\r\n                <ToastHeader>\r\n                <strong className=\"mr-auto\">Try Again</strong>\r\n                <small>few mins ago</small>\r\n                </ToastHeader>\r\n                <ToastBody>Wrong credentials ... ... ...</ToastBody>\r\n            </Toast>\r\n        )\r\n    }\r\n\r\n    const CollectionsPage = () => {\r\n        const [visible, setVisible] = useState(false);\r\n      \r\n        const onCreate = (values) => {\r\n          console.log('Received values of form: ', values);\r\n        //   console.log('values.username ', values.username);\r\n        //   console.log('values.password ', values.password);\r\n        \r\n        // \r\n\r\n        if(values.username === username && values.password === password){\r\n            console.log(\"Login success\");\r\n            setIsLoggedIn(true); // dont show login again\r\n        }\r\n        else{\r\n            setShow(true);     // trigger ToastMsg default initialise True\r\n\r\n        }\r\n\r\n          \r\n            setVisible(false); // trigger pre existing logic of modal\r\n        };\r\n      \r\n        return (\r\n          <div>\r\n            <Button1\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                setVisible(true);\r\n              }}\r\n            >\r\n              Login\r\n            </Button1>\r\n            <CollectionCreateForm\r\n              visible={visible}\r\n              onCreate={onCreate}\r\n              onCancel={() => {\r\n                setVisible(false);\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      };\r\n\r\nconst LoggedIn = () => {\r\n    return(\r\n        <div>\r\n            <div>Logged In</div>\r\n            <Button1\r\n              type=\"primary\"\r\n              onClick={() => setIsLoggedIn(false)}\r\n            >\r\n              Log Out\r\n            </Button1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n    return(\r\n            <div className=\"MainDiv\">\r\n                <div className=\"jumbotron text-center\">\r\n                    <div className=\"container\">\r\n                    {isLoggedIn ? <div><LoggedIn /><Chatting /></div> : <CollectionsPage />}  \r\n                    <ToastMsg />\r\n                    </div>                      \r\n                </div>\r\n\r\n            </div>\r\n        );\r\n}\r\n\r\nconst LeftSider = () => {\r\n    return(\r\n        <div>\r\n            {/* <div>Left Sider Func</div> */}\r\n        </div>\r\n    )\r\n}\r\nconst RightSider = () => {\r\n    return(\r\n        <div>\r\n            {/* <div>Right Sider Func</div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyAppComponent;\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst GlobalContext = React.createContext({ Global : null });\r\n\r\n\r\nconst GlobalProvider = GlobalContext.Provider // App.js\r\nconst GlobalConsumer = GlobalContext.Consumer // No Use instead Hooks\r\n\r\n\r\n\r\nexport { GlobalProvider, GlobalConsumer, GlobalContext }","import React from 'react';\r\n\r\n\r\nconst HeaderContext = React.createContext();\r\n\r\nlet initialState = {\r\n    count: 10,\r\n    color: \"green\"\r\n}\r\n\r\nlet reducer = (state, action) => {\r\n\r\n    switch(action.type) {\r\n        case \"reset\":\r\n            return initialState;\r\n        case \"increment\":\r\n            return { ...state, count: state.count + 1 };\r\n        case \"decrement\":\r\n            return { ...state, count: state.count - 1 };\r\n        case \"set-color\":\r\n            return { ...state, color: action.payload };\r\n    }\r\n};\r\n\r\nfunction HeaderProvider(props) {\r\n    \r\n    let [state, dispatch] = React.useReducer( reducer, initialState );\r\n    let value = { state, dispatch };\r\n\r\n    return (\r\n        <HeaderContext.Provider value= {value}> { props.children } </HeaderContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nlet HeaderConsumer = HeaderContext.Consumer;\r\n\r\n\r\nexport { HeaderProvider, HeaderConsumer, HeaderContext }","import React, {useEffect, useState, useContext } from 'react';\r\nimport Header from \"./../../Common/Header/Header\";\r\n\r\nimport './SendMoney.css'\r\n\r\nimport { GlobalContext } from \"./../../Context/GlobalContext\";\r\n\r\nimport { HeaderContext } from \"./../../Context/HeaderContext\";\r\n\r\nfunction SendMoney(props) {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n    let { state, dispatch } = useContext(HeaderContext);\r\n\r\n    let inc = () => dispatch({ type: \"increment\" });\r\n\r\n\r\n    useEffect(()=>{\r\n        //props.setName('Send Money');\r\n    })\r\n    \r\n\r\n    return ( \r\n        \r\n        <div className=\"Payments\">\r\n            <Header name={'Send Money'} isBack={true}/>\r\n            <SendBody />\r\n\r\n            {state.color}\r\n            <p>\r\n            Current count: <b>{state.count}</b>\r\n            </p>\r\n            <button onClick={inc}>Increment!</button>\r\n\r\n\r\n            {\r\n            /* <GlobalConsumer>\r\n                {\r\n                    (accounts)=>{\r\n                        return <div>Acc {accounts.length}</div>\r\n                    }\r\n                }\r\n            </GlobalConsumer> \r\n            Acc length {globalContext.Global.Accounts.length}// works syntax\r\n            <SendBody {...props} />\r\n            */\r\n            }\r\n            \r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default SendMoney;\r\n\r\n\r\nfunction SendBody(props) {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n    \r\n    const [value,setValue] = useState('');\r\n    const handleSelect= (e) =>{\r\n      setValue(e)\r\n    }\r\n\r\n    return(\r\n        <div className=\"Send\">\r\n            <div className=\"SendHeader\">\r\n                <p>Pay from</p>\r\n                <ul>\r\n                <label >Account </label>\r\n                <select onChange={(event) => handleSelect(event.target.value)}>\r\n                    <option value=\"\">Select account</option>\r\n                    {\r\n                        globalContext.Global.Accounts.map(i => (\r\n                            <option value={i.id} key={i.id}>{i.name}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport Header from \"../../Common/Header/Header\";\r\n\r\n//import DropdownButton from 'react-bootstrap/DropdownButton';\r\n//import Dropdown from 'react-bootstrap/Dropdown'\r\nimport './TransferMoney.css'\r\nimport { GlobalContext } from \"./../../Context/GlobalContext\";\r\n\r\n\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction TransferMoney(props) {\r\n    \r\n    \r\n    useEffect(()=>{\r\n\r\n    })\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"Payments\">\r\n            <Header name={'Transfer Between'} isBack={true}/>\r\n            <TransferBody />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default TransferMoney;\r\n\r\n\r\nfunction TransferBody(props) {\r\n    \r\n\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n\r\n    const [value,setValue] = useState('');\r\n    const handleSelect= (e) =>{\r\n      setValue(e)\r\n    }\r\n  \r\n\r\n    return(\r\n        <div className=\"Transfer\">\r\n            <ul className=\"Select\">\r\n            {/* \r\n            LOGIC WITH NAME\r\n            <label className=\"label\">Transfer from</label>\r\n            <select onChange={(event) => handleSelect(event.target.value)}>\r\n                <option value=\"\">Select account to transfer from</option>\r\n                {\r\n                    props.accounts.map(i => (\r\n                        <option key={i.id}>{i.name}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n            <label className=\"label\">Transfer to</label>\r\n            <select>\r\n                <option value=\"\">select account to transfer to</option>\r\n                {\r\n                    props.accounts.map(i => (\r\n                        i.name==value ?  \r\n                            i.linked_accounts.map(j=>(<option key={j}>{j}</option>)) : \r\n                            null\r\n                    ))\r\n                }\r\n            </select> \r\n            */}\r\n\r\n            <label className=\"label\">Transfer from </label>\r\n            <select onChange={(event) => handleSelect(event.target.value)}>\r\n                <option value=\"\">Select account to transfer from</option>\r\n                {\r\n                    globalContext.Global.Accounts.map(i => (\r\n                        <option value={i.id} key={i.id}>{i.name}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n            <label className=\"label\">Transfer to</label>\r\n            <select>\r\n                <option value=\"\">select account to transfer to</option>\r\n                {\r\n                    globalContext.Global.Accounts.map(i => (\r\n                        i.id === value ?  \r\n                            i.linked_accounts.map(j=>(<option key={j}>{j}</option>)) : \r\n                            null\r\n                    ))\r\n                }\r\n            </select>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState, useContext } from 'react';\r\nimport Header from \"../../Common/Header/Header\";\r\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport './StandingOrder.css'\r\n\r\nimport { GlobalContext } from \"../../Context/GlobalContext\";\r\n\r\nfunction StandingOrder(props) {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n    let match = useRouteMatch();\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        //props.setName('Send Money');\r\n    })\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"Payments\">\r\n            <Header name={'Standing Orders'} isBack={true}/>\r\n            <StandingOrderBody />\r\n\r\n            {/* <Switch>\r\n                <Route path={`${match.url}/setUpNewOrder`}>\r\n                    <SetUpStanding />\r\n                </Route>\r\n            </Switch> */}\r\n\r\n        </div>\r\n\r\n     );\r\n}\r\n\r\n\r\n\r\nfunction StandingOrderBody(props) {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n    let match = useRouteMatch();\r\n\r\n    const [value,setValue] = useState('');\r\n    const handleSelect= (e) =>{\r\n      setValue(e)\r\n    }\r\n\r\n    return(\r\n        <div className=\"Send\">\r\n           <div className=\"standing-order-title\">\r\n                <p>To view your standing orders select an account</p>\r\n            </div>\r\n            <div className=\"standing-order-body\">\r\n                <ul>\r\n                <label >Account </label>\r\n                <select onChange={(event) => handleSelect(event.target.value)}>\r\n                    <option value=\"\">Select account</option>\r\n                    {\r\n                        globalContext.Global.Accounts.map(i => (\r\n                            <option value={i.id} key={i.id}>{i.name}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n\r\n                <p className=\"standing-order-or\"><span>Or</span></p>\r\n\r\n                <div className=\"set-up-button\">\r\n                    <button ><Link to={\"/setUpNewOrder\"}><i className=\"plus-logo\"></i><div>Set up new standing order</div></Link></button>\r\n                </div>\r\n\r\n                <div className=\"info-msg\">\r\n                    <span className=\"info-logo\">\r\n                    </span>\r\n                    <div>\r\n                        <p className=\"info-msg-text\">\r\n                            Standing order can be set up online to transfer funds from your current account to another account in the same country. (max limit €3,000 / £3,000).\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default StandingOrder;\r\n","import React, {useEffect, useState, useContext } from 'react';\r\nimport Header from \"../../Common/Header/Header\";\r\n\r\n\r\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { GlobalContext } from \"../../Context/GlobalContext\";\r\nimport \"./SetUpStanding.css\";\r\n\r\n\r\nfunction SetUpStanding(props) {\r\n    return(\r\n        <div>\r\n            <Header name={'Set up Standing...'} isBack={true}/>\r\n            <SetUpStandingBody />\r\n        \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nfunction SetUpStandingBody(props) {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n    let match = useRouteMatch();\r\n\r\n    const [value,setValue] = useState('');\r\n    const handleSelect= (e) =>{\r\n      setValue(e)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"Send\">\r\n            <div className=\"set-up-standing-title\">\r\n                <div>\r\n                    <p className=\"time-info\">\r\n                    <i className=\"fa fa-clock-o\" ></i>&nbsp; \r\n                        It takes a minimum of \r\n                        <span className=\"info-middle\"><strong> 1 working day to </strong></span>\r\n                        set up your standing order.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"set-up-standing-order-body\">\r\n                <ul>\r\n                <label > Your Account </label>\r\n                <div className=\"account-info\">\r\n                You can set up a standing order online from your current account to another account in the same country.\r\n                </div>\r\n                <div className=\"pay-from\">\r\n                    <strong className=\"pay-from-text\">Pay from</strong>\r\n                </div>\r\n                <select onChange={(event) => handleSelect(event.target.value)}>\r\n                    <option value=\"\">Select an account</option>\r\n                    {\r\n                        globalContext.Global.Accounts.map(i => (\r\n                            <option value={i.id} key={i.id}>{i.type} - {i.name}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n\r\n\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SetUpStanding;","import React, {useEffect, useState, useContext } from 'react';\r\n\r\nimport Header from \"../../Common/Header/Header\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { GlobalContext } from \"../../Context/GlobalContext\";\r\nimport './PrivateBankingPayment.css';\r\n\r\n\r\nfunction PrivateBankingPayment(props) {\r\n    return(\r\n        <div>\r\n            <Header name={'Private Banking Payment'} isBack={true}/>\r\n            <PrivateBankingPaymentBody />\r\n        \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nfunction PrivateBankingPaymentBody(props) {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n    let match = useRouteMatch();\r\n    \r\n    let history = useHistory();\r\n\r\n    const [value,setValue] = useState('');\r\n    const handleSelect= (e) =>{\r\n      setValue(e)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"Send\">\r\n            <div className=\"private-banking-title\">\r\n                <div>\r\n                    <div  className=\"text-center\">\r\n                    <i className=\"private-logo\" >\r\n                    </i>\r\n                    </div>\r\n\r\n                    <p className=\"top-message\">\r\n                        If your payment cannot be made on 365 online you cannot make a separate payment throu the req payment option below\r\n                    </p>\r\n                    <p className=\"font-weight-bold\">\r\n                        when for example:\r\n                    </p>\r\n                    <ul className=\"borderless\">\r\n                        <li>Amount exceeded the 365 total working day limit.</li>\r\n                        <li>You want to send money to courriers or in currencies that are not included in 365 online.</li>\r\n                        <li>You want to send money from currency account in global market.</li>\r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"private-banking-note\">\r\n                <p>Please Note:</p>\r\n                <ul className=\"borderless\">\r\n                    <li>Amount exceeded the 365 total working day limit.</li>\r\n                    <li>You want to send money to courriers or in currencies that are not included in 365 online.</li>\r\n                    <li>You want to send money from currency account in global market.</li>\r\n                    <li>You want to send money to courriers or in currencies that are not included in 365 online.</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"private-banking-footer\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <button class=\"go-back-button\" onClick={() => history.goBack()}>Go back</button>\r\n                    <button class=\"req-payment-button\">Request payment</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default PrivateBankingPayment;","import React, {useEffect, useState, useContext } from 'react';\r\nimport Header from \"../../Common/Header/Header\";\r\n\r\nimport './../SendMoney/SendMoney.css'\r\n\r\nimport { GlobalContext } from \"../../Context/GlobalContext\";\r\n\r\nfunction MobileTopUp(props) {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n\r\n    useEffect(()=>{\r\n        //props.setName('Send Money');\r\n    })\r\n    \r\n\r\n    return ( \r\n        \r\n        <div className=\"Payments\">\r\n            <Header name={'Mobile Top Up'} isBack={true}/>\r\n            <MobileTopUpBody />\r\n            {\r\n            /* <GlobalConsumer>\r\n                {\r\n                    (accounts)=>{\r\n                        return <div>Acc {accounts.length}</div>\r\n                    }\r\n                }\r\n            </GlobalConsumer> \r\n            Acc length {globalContext.Global.Accounts.length}// works syntax\r\n            <SendBody {...props} />\r\n            */\r\n            }\r\n            \r\n        </div>\r\n\r\n     );\r\n}\r\n \r\n\r\n\r\nfunction MobileTopUpBody(props) {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n\r\n    const [value,setValue] = useState('');\r\n    const handleSelect= (e) =>{\r\n      setValue(e)\r\n    }\r\n\r\n    return(\r\n        <div className=\"Send\">\r\n            <div className=\"SendHeader\">\r\n                <p>Pay from</p>\r\n                <ul>\r\n                <label ><strong>Account</strong> </label>\r\n                <select onChange={(event) => handleSelect(event.target.value)}>\r\n                    <option value=\"\">Select account</option>\r\n                    {\r\n                        globalContext.Global.Accounts.map(i => (\r\n                            <option value={i.id} key={i.id}>{i.type} - {i.name}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default MobileTopUp;\r\n","import React, {useEffect, useState, useContext } from 'react';\r\nimport Header from \"../../Common/Header/Header\";\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\n\r\n\r\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { GlobalContext } from \"../../Context/GlobalContext\";\r\nimport \"./DirectDebit.css\";\r\n\r\n\r\nfunction DirectDebit(props) {\r\n\r\n\r\n    \r\n    return(\r\n        <div className=\"Payments\">\r\n            <Header name={'SEPA Direct Debit Services'} isBack={true}/>\r\n            <DirectDebitBody />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction DirectDebitBody(props) {\r\n    return(\r\n        <div>\r\n            <div className=\"top-heading\">\r\n                <div className=\"help-info\">\r\n                    <p><i className=\"fa fa-question\"></i>\r\n                        Need a hand?\r\n                    </p>\r\n                </div>                \r\n                <div className=\"next-arrow\">\r\n                    <i className=\"fa fa-chevron-right\"></i>\r\n                </div>\r\n            </div>  \r\n            <div className=\"Send\">\r\n                <AccordionList />\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction chgStyle(e) {\r\n    //console.log(\"clikkk chg\" +e.target.classList);\r\n\r\n\r\n    if(e.target.classList.contains(\"card-header\")){\r\n        e.target.classList.remove(\"card-header\");\r\n        e.target.classList.add(\"new-card-header\");\r\n    }else{\r\n        e.target.classList.remove(\"new-card-header\");\r\n        e.target.classList.add(\"card-header\");        \r\n    }\r\n    \r\n    \r\n}\r\n\r\nfunction AccordionList(props) {\r\n\r\n    \r\n\r\n    const [Accordion,setAccordion] = useState(\r\n        [\r\n            {\r\n                \"id\":\"0\",\r\n                \"title\":\"Cancel direct debit mandate\",\r\n                \"body\":\"\"\r\n            },\r\n            {\r\n                \"id\":\"1\",\r\n                \"title\":\"Refuse next/all direct debits\",\r\n                \"body\":\"\"\r\n            },\r\n            {\r\n                \"id\":\"2\",\r\n                \"title\":\"Reactivate next/all direct debits\",\r\n                \"body\":\"\"\r\n            },\r\n            {\r\n                \"id\":\"3\",\r\n                \"title\":\"block/unblock direct debits\",\r\n                \"body\":\"\"\r\n            }\r\n        ]\r\n    );\r\n\r\n    return(\r\n        <div>\r\n            {Accordion.map(i=>{\r\n                return(\r\n                    <Accord key={i.id} id={i.id} title={i.title} body={getBodies(i.id)} />\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Accord({id, title, body}) {\r\n    return(\r\n        <div key={id}>\r\n            <Accordion defaultActiveKey=\"\">\r\n                <Card >\r\n                    <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={id} onClick={(e)=>chgStyle(e)}>\r\n                    {title}\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey={id}>\r\n                        <Card.Body>\r\n                            {\r\n                                \r\n                                body //getBodies(id) // id == \"0\" ? <Body1/>: id == \"1\" ? <Body2/>: id == \"2\" ? <Body3/>: <Body4/>   \r\n                                                         \r\n                            }\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DirectDebit;\r\n\r\n\r\n// just binds Accord Body with respective Accord Card header id\r\n//id == \"0\" ? <Body1/>: id == \"1\" ? <Body2/>: id == \"2\" ? <Body3/>: <Body4/>\r\nfunction getBodies(id) {\r\n\r\n    if(id===\"0\")\r\n        return <Body1 />\r\n    else if(id===\"1\")\r\n        return <Body2 />    \r\n    else if(id===\"2\")\r\n        return <Body3 />\r\n    else if(id===\"3\")\r\n        return <Body4 />   \r\n    else\r\n        return \"ERR!!! BODY DOENT EXIST LETS CREATE NEW BODY\"\r\n\r\n}\r\n\r\nfunction Body1(props) {\r\n    return(\r\n        <div>\r\n            <div className=\"body-1\">\r\n                <p>\r\n                 <span><i className=\"fa fa-check\" style={{color:\"blue\",paddingRight: '1%'}}></i></span>\r\n\t\t\t\t <span>This means the bank will permenantly cancel all SEPA direct debit payments for this mandate.</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n                  <span><i className=\"fa fa-check\" style={{color:\"blue\",paddingRight: '1%'}}></i></span>\r\n\t\t\t\t  <span>Once this request is processed it cannot be reversed.</span>\r\n\t\t\t    </p>\r\n\t\t\t    <p>\r\n                  <span><i className=\"fa fa-check\" style={{color:\"blue\",paddingRight: '1%'}}></i></span>\r\n\t\t\t\t  <span>You need to submit your request by 3pm, one working day before the next payment is due.</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t\r\n\t\t\t\t<h6>Request form...</h6>\r\n\t\t\t    <h6 style={{color:\"blue\"}}>You'll need:</h6>\r\n\t\t\t\t\r\n\t\t\t\t<p><i className=\"fa fa-check-circle\" style={{color:\"blue\",paddingRight: '1%'}}></i>\r\n\t\t\t\t   Creditor name and ID\r\n\t\t\t\t   <a href=\"#\" style={{float:\"right\"}}><em><u>What is a creditor ID?</u></em></a></p>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t    <p><i className=\"fa fa-check-circle\" style={{color:\"blue\", paddingRight: '1%'}}></i>\r\n\t\t\t\tUnique mandate reference (UMR)\r\n\t\t\t\t<a href=\"#\" style={{float:\"right\"}}><em><u>Where's my UMR?</u></em></a></p>\r\n\t\t\t\t\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"req-payment-button\">Continue</button>\r\n                </div>\r\n\t\t\t\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\nfunction Body2(props) {\r\n    return(\r\n        <div>\r\n            <div className=\"body-2\">\r\n                <p>Make a selection</p>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"\" style={{width:\"40%\"}}>Refuse Next</button>\r\n                    <button className=\"\" style={{width:\"40%\"}}>Refuse All</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction Body3(props) {\r\n    return(\r\n        <div>\r\n            <div className=\"body-3\">\r\n                <p>Body 3</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction Body4(props) {\r\n    return(\r\n        <div>\r\n            <div className=\"body-4\">\r\n                <p>Make a selection</p>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <button className=\"\" style={{width:\"40%\"}}>Block</button>\r\n                    <button className=\"\" style={{width:\"40%\"}}>Unblock</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n// function AccordionList(props) {\r\n//     return(\r\n//         <div>  \r\n//             <Accordion defaultActiveKey=\"\">\r\n//                 <Card>\r\n//                 {/* <Card.Header className=\"\"> */}\r\n//                     <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\" onClick={(e)=>chgStyle(e)}>\r\n//                     Cancel direct debit mandate\r\n//                     </Accordion.Toggle>\r\n//                 {/* </Card.Header> */}\r\n\r\n//                 <Accordion.Collapse eventKey=\"0\">\r\n//                     <Card.Body>Body content for panel 1</Card.Body>\r\n//                 </Accordion.Collapse>\r\n//                 </Card>\r\n//             </Accordion>\r\n\r\n//             <Accordion defaultActiveKey=\"\">\r\n//                 <Card >\r\n//                 {/* <Card.Header className=\"\"> */}\r\n//                     <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"1\" onClick={(e)=>chgStyle(e)}>\r\n//                     Refuse next/all direct debits\r\n//                     </Accordion.Toggle>\r\n//                 {/* </Card.Header> */}\r\n\r\n//                 <Accordion.Collapse eventKey=\"1\">\r\n//                     <Card.Body>Body content for panel 2</Card.Body>\r\n//                 </Accordion.Collapse>\r\n//                 </Card>\r\n//             </Accordion>\r\n\r\n\r\n//         </div>\r\n//     )\r\n// }","import React, {useEffect, useState, useContext } from 'react';\r\nimport Header from \"../../Common/Header/Header\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nimport './FutureDatedPayment.css'\r\n\r\nimport { GlobalContext } from \"../../Context/GlobalContext\";\r\n\r\n\r\n\r\n\r\nfunction FutureDatedPayment(props) {\r\n    return(\r\n        <div>\r\n            <Header name={'Future Dated Payments'} isBack={true}/>\r\n            <FutureDatedPaymentBody />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction FutureDatedPaymentBody(props) {\r\n\r\n    \r\n    const globalContext = useContext(GlobalContext);\r\n    let transactions = globalContext.Global.Accounts[0].transactions // take transactions arr for account 1\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"Send\">\r\n            <div className=\"d-flex justify-content-around\">\r\n                \r\n                <Table striped borderless hover className=\"payment-table \">\r\n                    <thead>\r\n                        <tr>\r\n                        {/* <th>#</th> */}\r\n                        <th>Status</th>\r\n                        <th>Payee Name</th>\r\n                        <th>Amount</th>\r\n                        <th>Due Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {   \r\n                        transactions.map(i=>{\r\n                            return(                                \r\n                                <tr key={i.id}>\r\n                                    {/* <td>{i.id}</td> */}\r\n                                    <td className={getStyleStatus(i.status)}>\r\n                                        {i.status}\r\n                                    </td>\r\n                                    <td>{i.payee_name}</td>\r\n                                    <td className=\"text-center\">{i.amount}</td>\r\n                                    <td>{i.due_date}</td>\r\n                                </tr>                                \r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// working of this function depends on JSON transaction status data should match\r\nfunction getStyleStatus(status) {\r\n    if(status===\"PENDING\")\r\n        return \"payment-pending-status\"\r\n    else if(status===\"UNSUCCESSFUL\")\r\n        return \"payment-unsuccess-status\"    \r\n    else if(status===\"SUCCESSFUL\")\r\n        return \"payment-success-status\"  \r\n    else if(status===\"CANCELLED\")\r\n        return \"payment-cancel-status\"\r\n    return \"\"          \r\n}\r\n\r\nexport default FutureDatedPayment;","import React, {useEffect, useState, useContext } from 'react';\r\nimport Header from \"../../Common/Header/Header\";\r\n\r\nimport './../SendMoney/SendMoney.css'\r\n\r\nimport { GlobalContext } from \"../../Context/GlobalContext\";\r\n\r\nimport { HeaderContext } from \"../../Context/HeaderContext\";\r\n\r\nfunction ManagePayee(props) {\r\n\r\n    const globalContext = useContext(GlobalContext);\r\n\r\n    let { state, dispatch } = useContext(HeaderContext);\r\n\r\n    let inc = () => dispatch({ type: \"increment\" });\r\n\r\n\r\n    useEffect(()=>{\r\n        //props.setName('Send Money');\r\n    })\r\n    \r\n\r\n    return ( \r\n        \r\n        <div className=\"Payments\">\r\n            <Header name={'Manage Payee'} isBack={true}/>\r\n\r\n            {state.color}\r\n            <p>\r\n            Current count: <b>{state.count}</b>\r\n            </p>\r\n            <button onClick={inc}>Increment!</button>\r\n\r\n\r\n            \r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default ManagePayee;\r\n\r\n","import React, { useEffect, useState }from 'react';\r\nimport { BrowserRouter, Route, Switch, useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\n\r\nimport { Layout, Menu, Breadcrumb, Switch as Switch1 } from 'antd';\r\nimport { DesktopOutlined, PieChartOutlined, FileOutlined, TeamOutlined, UserOutlined, HomeOutlined } from '@ant-design/icons';\r\n\r\nimport \"./MyAppLayout.css\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nvar siderLayoutArray = [\r\n    \"option1\", \"option2\", \"user\", \"team\", \"files\"\r\n]\r\n\r\nvar siderJson = {\r\n    option1: \"Option 1\", option2: \"Option 2\"\r\n}\r\n\r\nfunction MyAppLayout(){\r\n\r\n    const history = useHistory();\r\n    let { path, url } = useRouteMatch();\r\n\r\n    const[collapsed, setCollapsed] = useState(false);\r\n    var onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        setCollapsed(collapsed);\r\n    };\r\n    const[theme, setTheme] = useState('dark');\r\n    var changeTheme = value => {\r\n        value ? setTheme('dark') : setTheme('light');\r\n  };\r\n\r\n  const[location, setLocation] = useState(\"\");\r\n  useEffect(\r\n    ()=>{setLocation(history.location.pathname)}, [history.location.pathname]\r\n  );\r\n\r\n    return(\r\n        <Layout style={{ minHeight: '100vh' }} >\r\n            <Sider collapsible collapsed={collapsed} onCollapse={onCollapse} className={theme==='dark'? \"ant-layout-sider-dark\": \"ant-layout-sider-light\"}>\r\n                <div className=\"logo\" />\r\n                <Switch1  checked = { theme === \"dark\" } onChange = {changeTheme} checkedChildren= \"Dark\" unCheckedChildren= \"Light\"  />\r\n                <br />\r\n                <br />\r\n                <Menu theme = {theme} defaultSelectedKeys={['1']} mode=\"inline\">\r\n                    \r\n                    <Menu.Item key=\"1\" icon={<DesktopOutlined />} onClick={()=>{history.push(`${url}/option1`)}}>                  \r\n                    {/* <Menu.Item key=\"1\" icon={<PieChartOutlined />} onClick={()=>{history.push(`${url}/`+siderLayoutArray[0])}}>  */}\r\n                    {/* {siderJson[siderLayoutArray[0]]} */}\r\n                    Option 1\r\n                    </Menu.Item>\r\n                    {/* <Menu.Item key=\"2\" icon={<DesktopOutlined />} onClick={()=>{history.push(`${url}/option2`)}}> */}\r\n                    <Menu.Item key=\"2\" icon={<DesktopOutlined />} onClick={()=>{history.push(`${url}/option2`)}}>\r\n                    Option 2\r\n                    </Menu.Item>\r\n                    <SubMenu key=\"sub1\" icon={<UserOutlined /> } title=\"User\" >\r\n                        <Menu.Item key=\"3\" onClick={()=>{history.push(`${url}/user/tom`)}}>Tom</Menu.Item>\r\n                        <Menu.Item key=\"4\" onClick={()=>{history.push(`${url}/user/bill`)}}>Bill</Menu.Item>\r\n                        <Menu.Item key=\"5\" onClick={()=>{history.push(`${url}/user/alex`)}}>Alex</Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\r\n                        <Menu.Item key=\"6\" onClick={()=>{history.push(`${url}/team/team1`)}}>Team 1</Menu.Item>\r\n                        <Menu.Item key=\"8\" onClick={()=>{history.push(`${url}/team/team2`)}}>Team 2</Menu.Item>\r\n                    </SubMenu>\r\n                    <Menu.Item key=\"9\" icon={<FileOutlined />} onClick={()=>{history.push(`${url}/files`)}}>\r\n                    Files   \r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\">\r\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\r\n            <Content style={{ margin: '0 16px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n\r\n                    <Breadcrumb.Item href=\"/\">\r\n                        <HomeOutlined /> \r\n                    </Breadcrumb.Item>                    \r\n\r\n                    <Breadcrumb.Item><a href=\"/myAppLayout\">MyAppLayout</a></Breadcrumb.Item> \r\n\r\n                    {                        \r\n                        location.includes(\"user\") ? \r\n                            <Breadcrumb.Item><a onClick={()=>history.go(\"/myAppLayout/user\")}>User</a></Breadcrumb.Item>  : null                                \r\n                    }\r\n                    {\r\n                        location.includes(\"tom\") ? \r\n                            <Breadcrumb.Item><a href=\"/myAppLayout/user/tom\">Tom</a></Breadcrumb.Item>  : null\r\n                    }\r\n                    {\r\n                        location.includes(\"alex\") ? \r\n                            <Breadcrumb.Item><a href=\"/myAppLayout/user/alex\">Alex</a></Breadcrumb.Item>  : null\r\n                    }\r\n                    {\r\n                        location.includes(\"bill\") ? \r\n                            <Breadcrumb.Item><a href=\"/myAppLayout/user/bill\">Bill</a></Breadcrumb.Item>  : null\r\n                    }\r\n                    {\r\n                        location.includes(\"option1\") ? \r\n                            <Breadcrumb.Item><a href=\"/myAppLayout/option1\">Option1</a></Breadcrumb.Item>  : null\r\n                    }\r\n                    {\r\n                        location.includes(\"option2\") ? \r\n                            <Breadcrumb.Item><a href=\"/myAppLayout/option2\">Option2</a></Breadcrumb.Item>  : null\r\n                    }\r\n                    {\r\n                        location.includes(\"team\") ? \r\n                            <Breadcrumb.Item><a href=\"/myAppLayout/team\">Team</a></Breadcrumb.Item>  : null\r\n                    }\r\n                    {\r\n                        location.includes(\"team1\") ? \r\n                            <Breadcrumb.Item><a href=\"/myAppLayout/team/team1\">Team1</a></Breadcrumb.Item>  : null\r\n                    }\r\n                    {\r\n                        location.includes(\"team2\") ? \r\n                            <Breadcrumb.Item><a href=\"/myAppLayout/team/team2\">Team2</a></Breadcrumb.Item>  : null\r\n                    }\r\n                    {\r\n                        location.includes(\"files\") ? \r\n                            <Breadcrumb.Item><a href=\"/myAppLayout/files\">Files</a></Breadcrumb.Item>  : null\r\n                    }\r\n                    \r\n                </Breadcrumb>\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                <Switch>\r\n                    <Route exact path={path}>\r\n                    </Route>\r\n                    <Route path={`${path}/option1`}>\r\n                        <div>\r\n                        Option1    \r\n                        </div>\r\n                    </Route>\r\n                    <Route path={`${path}/option2`}>\r\n                        <div>\r\n                        Option2    \r\n                        </div>\r\n                    </Route>\r\n                    <Route path={`${path}/files`}>\r\n                        <div>\r\n                            Files    \r\n                        </div>\r\n                    </Route>\r\n                    <Route path={`${path}/user`}>\r\n                        <div>\r\n                            <h3>Option3 Users</h3>\r\n                            <Switch>\r\n                                <Route exact path={path}>\r\n                                </Route>\r\n                                <Route path={`${path}/user/tom`}>\r\n                                    <div>\r\n                                        Hello Tom\r\n                                    </div>\r\n                                </Route>\r\n                                <Route path={`${path}/user/bill`}>\r\n                                    <div>\r\n                                        Hello Bill\r\n                                    </div>\r\n                                </Route>\r\n                                <Route path={`${path}/user/alex`}>\r\n                                    <div>\r\n                                        Hello Alex\r\n                                    </div>\r\n                                </Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </Route>\r\n                    <Route path={`${path}/team`}>\r\n                        <div>\r\n                            <h3>Option4 Teams</h3>\r\n                            <Switch>\r\n                                <Route exact path={path}>\r\n                                </Route>\r\n                                <Route path={`${path}/team/team1`}>\r\n                                    <div>\r\n                                        Hello Team1\r\n                                    </div>\r\n                                </Route>\r\n                                <Route path={`${path}/team/team2`}>\r\n                                    <div>\r\n                                        Hello Team2\r\n                                    </div>\r\n                                </Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n                </div>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Ant Design Layout Footer</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default MyAppLayout;","\r\nimport React from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Footer = (props) => {\r\n\r\n    let history = useHistory();\r\n    // history.goBack()\r\n    // history.push(path);\r\n\r\n    return ( \r\n        <div>\r\n            \r\n            <div className=\"container-fluid text-center\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <div>Left Sider</div>\r\n\r\n                </div>\r\n                <div className=\"col-md-8 \">\r\n                    Footer\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                <div>Right Sider</div>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Footer;","import './App.css';\r\n//import Carousel from 'react-bootstrap/Carousel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n//import '../node_modules/react-bootstrap/dist/react-bootstrap';\r\nimport React, { useEffect, useState }from 'react';\r\nimport HomeComponent from './Layout/Home';\r\nimport MyAppComponent from './Layout/MyApp';\r\n\r\nimport SendMoney  from './Component/SendMoney/SendMoney';\r\nimport TransferMoney from \"./Component/TransferMoney/TransferMoney\";\r\nimport StandingOrder from \"./Component/StandingOrder/StandingOrder\";\r\nimport SetUpStanding from \"./Component/SetUpStanding/SetUpStanding\";\r\nimport PrivateBankingPayment from \"./Component/PrivateBankingPayment/PrivateBankingPayment\";\r\nimport MobileTopUp from \"./Component/MobileTopUp/MobileTopUp\";\r\nimport DirectDebit from \"./Component/DirectDebit/DirectDebit\";\r\nimport FutureDatedPayment from \"./Component/FutureDatedPayment/FutureDatedPayment\";\r\nimport ManagePayee from \"./Component/ManagePayee/ManagePayee\";\r\n\r\nimport MyAppLayout from \"./Layout/MyAppLayout\";\r\n\r\nimport Footer from \"./Common/Footer/Footer\";\r\n\r\nimport { HashRouter, BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport { GlobalProvider } from \"./Context/GlobalContext\";\r\nimport { HeaderProvider } from \"./Context/HeaderContext\";\r\nimport { TransactionProvider } from \"./Context/TransactionContext\";\r\n\r\nimport data from './Common/customers.json'\r\n\r\nfunction App() {\r\n\r\n  const [HeaderName,setHeaderName] = useState(\"\");\r\n  const [IsBack,setIsBack] = useState(false);\r\n  const [Data, setData] = useState(data);\r\n\r\n  // useEffect(() => {\r\n  //     fetch(\"./Common/customers.json\")\r\n  //       .then(res=>res.json())\r\n  //       .then(data=>setData(data))\r\n\r\n  //   }\r\n  // );\r\n\r\n  return (\r\n    <GlobalProvider value= {{Global: Data}} >\r\n    <HeaderProvider>\r\n    <TransactionProvider>  \r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <div className=\"App\">\r\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"/>\r\n\r\n\r\n            <Switch>\r\n              <Route path=\"/\" exact component= { (props) => ( <HomeComponent  /> )} />\r\n              <Route path=\"/myApp\" component={(props) => ( <MyAppComponent   /> )} />\r\n                      {/* <Route path=\"/myApp/myAccount\" exact component= { (props) => ( <div>myAccount page</div> )} /> */}\r\n              <Route path=\"/myAppLayout\" component={(props) => ( <MyAppLayout /> )} />\r\n            \r\n              <Route path=\"/sendMoney\" component={ (props) => ( <SendMoney   /> )} />\r\n              <Route path=\"/transferMoney\" component={(props) => ( <TransferMoney   /> )} />\r\n              <Route path=\"/standingOrders\" component={(props) => ( <StandingOrder   /> )} />\r\n              <Route path=\"/setUpNewOrder\" component={(props) => ( <SetUpStanding   /> )} />\r\n              <Route path=\"/privateBankingPayment\" component={(props) => ( <PrivateBankingPayment  /> )} />\r\n              <Route path=\"/mobileTopup\" component={(props) => ( <MobileTopUp   /> )} />\r\n              <Route path=\"/directDebits\" component={(props) => ( <DirectDebit   /> )} />\r\n              <Route path=\"/futureDatedPayments\" component={(props) => ( <FutureDatedPayment   /> )} />\r\n              <Route path=\"/managePayees\" component={(props) => ( <ManagePayee   /> )} />\r\n            \r\n              \r\n              \r\n            </Switch>\r\n            \r\n            <Footer />\r\n\r\n        </div>\r\n    </HashRouter>\r\n    </TransactionProvider>\r\n    </HeaderProvider>\r\n    </GlobalProvider>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}